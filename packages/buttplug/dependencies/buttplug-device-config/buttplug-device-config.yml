# Welcome to Buttplug Device Config
#
# DO NOT EDIT THIS FILE. YOUR CHANGES WILL BE OVERWRITTEN.
#
# Use user-device-config.yml for local device definitions.
#
# Now that we've got that bit of impoliteness out of the way... Hi,
# I'm qDot. Welcome to the buttplug device configuration file.
#
# You've managed to wander into this place we keep all of the sex toy
# information. You're not really supposed to be here, but since you've
# shown up, might as give you a tour.
#
# This file is used in all Buttplug reference implementations,
# including C#, JS, and whatever other languages we decide to
# implement things in. It's our main source of truth for devices we
# know about.
#
# Devices in Buttplug are defined in terms of their protocol. We group
# together all devices that speak the same language. It will look
# something like this:
#
# protocols:
#   lovense:
#     btle:
#       names:
#         - LVS-*
#       services:
#         0000fff0-0000-1000-8000-00805f9b34fb: null
#
# The protocols portion of the config file lists all of the protocols
# we know, and how the devices that speak those protocols can be
# identified. For the above example, we're looking at Lovense brand
# hardware, all of which uses bluetooth LE, so we create a "btle"
# configuration section for that protocol. We list the device names
# (using a * as a wildcard, so this means "try to connect to anything
# that starts with LVS-"). We also list the services we're interested
# in. If a service only has rx/tx characteristics (many devices
# emulate serial in this way), we just put "null" and let the
# Bluetooth subtype manager sort out the characteristics on connect.
# Otherwise, if there are multiple characteristics, we list those in
# name/uuid form. See the definitions below for more examples.
#
# Other devices are similar. For USB/HID, we just list VID/PID pairs,
# as that's all we have to identify with.
#
# Serial ports are a bit different in that we don't have a specifier
# for them, they could be anywhere. Therefore, we just specify the
# port settings in this file. Baud rate, data bits, etc. In Buttplug
# Reference Servers, we allow the user to pass in another device
# config file like this one that they've built, that can define things
# like local port names. So the user may have a file that looks like:
#
# protocols:
#   erostek-et312:
#     serial:
#       ports:
#         - COM4
#
# The user's config will be merged with this config file in the
# server, which lets any Serial subtype manager know which port to
# discover the device on, as well as all of the other port settings to
# use.
#
# Users can also define things we're missing here, like new BTLE names
# or IDs we haven't gotten to yet. The only thing users can't define
# is new protocols, since those have to be implemented in source code.
#
# That's pretty much it for how this file works.


# Define identifier types. These are the only values devices can have
# in their connection-info lists.

connection-info-types:
  - btle
  - serial
  - usb
  - hid

# Things we may add some day: BT Classic, 433mhz radio
  
# Now for the actual protocol definitions. This is gonna get wild, so
# I'll keep a list of rules that you can refer to up here.
#
# - If you are curious about device identifiers or protocols, all
#   of those are documented at https://stpihkal.docs.buttplug.io
#
# - BTLE name fields can be wildcarded using "*". This allows us to do
#   things like searching for all devices of a certain name.
#
# - Where possible, we assume all devices have at least one output (so
#   we can send the commands), and maybe one input. In cases
#   otherwise, a comment should be left denoting what we're doing
#   something different.
#
# - Most toys just mirror good ol' serial. With that in mind, we call
#   the host-to-device line tx, and device-to-host line rx.
#
# - If you see a "btle" connection info with service IDs but no
#   characteristic IDs (null), this means that we'll try autodetecting
#   the characteristics. We'll just expect it to have an input (which
#   we'll name "rx") and an output characteristic (which we'll name
#   "tx"), as mentioned above.
#
# - Similarly for USB, we'll test endpoints for r/w flags when no
#   endpoint handles are passed. We assume all USB devices have a
#   vendor control endpoint for Trancevibrator reasons.
#
# - A "btle" connection info with multiple service listings can mean
#   one of two things. Either we expect the device to be identifiable
#   as multiple services (like Lovense), or the device may have
#   multiple services we use (like some BTLE toys that divide control
#   and sensor between different services).
#
# - If you're connecting to a buttplug server and don't see a device
#   that's listed here, it's not the fault of this config file.
#   Servers may not implement all protocols or busses for various
#   reasons. We just define which devices we may know about here. File
#   an issue on the library you're using.
#
# - If you're connecting to a buttplug server and some device doesn't
#   take a Buttplug message you're expecting it to, it's not the fault
#   of this config file. Servers implement protocols, and protocols
#   dictate which messages they are capable of sending. We don't
#   really keep a standard for that, we just define which devices we
#   may know about here. File an issue on the library you're using.
#
# - Serial info here is for default device configuration. Port names
#   will have to be added by the user in the user device config file.

protocols:
  
  lovense:
    # Lovense is special. Special in oh so many ways.
    #
    # Lovense have changed BLE name formats at least once. For this
    # generic device, we just use the largest wildcard we can. We do
    # our name and capabilities finding in the protocol
    # implementation, because we have to query the device after
    # connection.
    #
    # The service uuids change constantly. This list is overly
    # exhaustive, because we have to specify services in WebBluetooth
    # and can't wildcard them. We'll add more as we find them.
    btle:
      names:
        - LVS-*
      services:
        0000fff0-0000-1000-8000-00805f9b34fb:
          tx: 0000fff2-0000-1000-8000-00805f9b34fb
          rx: 0000fff1-0000-1000-8000-00805f9b34fb
        6e400001-b5a3-f393-e0a9-e50e24dcca9e:
          tx: 6e400002-b5a3-f393-e0a9-e50e24dcca9e
          rx: 6e400003-b5a3-f393-e0a9-e50e24dcca9e
        50300001-0024-4bd4-bbd5-a6920e4c5653:
          tx: 50300002-0024-4bd4-bbd5-a6920e4c5653
          rx: 50300003-0024-4bd4-bbd5-a6920e4c5653
        57300001-0023-4bd4-bbd5-a6920e4c5653:
          tx: 57300002-0023-4bd4-bbd5-a6920e4c5653
          rx: 57300003-0023-4bd4-bbd5-a6920e4c5653
        5a300001-0024-4bd4-bbd5-a6920e4c5653:
          tx: 5a300002-0024-4bd4-bbd5-a6920e4c5653
          rx: 5a300003-0024-4bd4-bbd5-a6920e4c5653
        50300001-0023-4bd4-bbd5-a6920e4c5653:
          tx: 50300002-0023-4bd4-bbd5-a6920e4c5653
          rx: 50300003-0023-4bd4-bbd5-a6920e4c5653
        53300001-0023-4bd4-bbd5-a6920e4c5653:
          tx: 53300002-0023-4bd4-bbd5-a6920e4c5653
          rx: 53300003-0023-4bd4-bbd5-a6920e4c5653
        5a300001-0023-4bd4-bbd5-a6920e4c5653:
          tx: 5a300002-0023-4bd4-bbd5-a6920e4c5653
          rx: 5a300003-0023-4bd4-bbd5-a6920e4c5653
        4f300001-0023-4bd4-bbd5-a6920e4c5653:
          tx: 4f300002-0023-4bd4-bbd5-a6920e4c5653
          rx: 4f300003-0023-4bd4-bbd5-a6920e4c5653
  xinput:
    # This will actually be ANY gamepad that supports XInput. XInput
    # is its own connector type, so we don't have any special
    # connection info here.
    #
    # TODO Maybe just start calling this "gamepad"? Maybe add "VR
    # Controller" too?
    null
  libo:
      btle:
        names:
          - PiPiJing # Whale/ELLE - Shock Egg
          - XiaoLu # Lottie - Rabbit
          - LuXiaoHan # LuLu - Egg
          - SuoYinQiu # Karen - Kegel
          - BaiHu # LaLa - Suction Rabbit
          - MonsterPub # Sistalk MonsterPub (all 6?)
        services:
          # Write Service
          00006000-0000-1000-8000-00805f9b34fb:
            tx: 00006001-0000-1000-8000-00805f9b34fb
            txmode: 00006002-0000-1000-8000-00805f9b34fb
          # Read Service (battery)
          # 00006050-0000-1000-8000-00805f9b34fb:
          #   battery: 00006051-0000-1000-8000-00805f9b34fb
          # 00006070-0000-1000-8000-00805f9b34fb:
          #   battery: 00006071-0000-1000-8000-00805f9b34fb
          # Read Service (pressue)
          # 00006050-0000-1000-8000-00805f9b34fb:
          #   battery: 00006051-0000-1000-8000-00805f9b34fb
  magic-motion:
    btle:
      names:
        - Smart Mini Vibe
        - Flamingo
        - Eidolon
        - Smart Bean
        - Magic Cell
        - Magic Wand
        - Krush
      services:
        78667579-7b48-43db-b8c5-7928a6b0a335:
          tx: 78667579-a914-49a4-8333-aa3c0cd8fedc
  mysteryvibe:
    btle:
      names:
        - MV Crescendo
      services:
        f0006900-110c-478B-B74B-6F403B364A9C:
          txmode: f0006901-110c-478B-B74B-6F403B364A9C
          txvibrate: f0006903-110c-478B-B74B-6F403B364A9C
  picobong:
    btle:
      names:
        - Blow hole
        - Picobong Male Toy
        - Diver
        - Picobong Egg
        - Life guard
        - Picobong Ring
        - Surfer
        - Picobong Butt Plug
        - Egg driver
        - Surfer_plug
      services:
        0000fff0-0000-1000-8000-00805f9b34fb:
          tx: 0000fff1-0000-1000-8000-00805f9b34fb
  vibratissimo:
    btle:
      names:
        - Vibratissimo
      services:
        00001523-1212-efde-1523-785feabcd123:
          txmode: 00001524-1212-efde-1523-785feabcd123
          txvibrate: 00001526-1212-efde-1523-785feabcd123
          rx: 00001527-1212-efde-1523-785feabcd123
  wevibe:
    btle:
      names:
        - Cougar
        - 4 Plus
        - 4plus
        - Bloom
        - classic
        - Classic
        - Ditto
        - Gala
        - Jive
        - Nova
        - NOVAV2
        - Pivot
        - Rave
        - Sync
        - Verge
        - Wish
      services:
        f000bb03-0451-4000-b000-000000000000:
          tx: f000c000-0451-4000-b000-000000000000
          rx: f000b000-0451-4000-b000-000000000000
  youcups:
    btle:
      names:
        - Youcups
      services:
        0000fee9-0000-1000-8000-00805f9b34fb:
          tx: d44bc439-abfd-45a2-b575-925416129600
  cueme:
    btle:
      names:
        # Cueme names have the bluetooth address in the middle because
        # sure. Why not. Of course they do.
        - FUNCODE_*
      services:
        0000fff0-0000-1000-8000-00805f9b34fb:
          tx: 0000fff1-0000-1000-8000-00805f9b34fb
  kiiroo-v2-vibrator:
    btle:
      names:
        - Pearl2
        - Fuse
        - Virtual Blowbot
        - Titan
      services:
        88f82580-0000-01e6-aace-0002a5d5c51b:
          tx: 88f82581-0000-01e6-aace-0002a5d5c51b
          rxtouch: 88f82582-0000-01e6-aace-0002a5d5c51b
          rxaccel: 88f82584-0000-01e6-aace-0002a5d5c51b
  kiiroo-v2:
    btle:
      names:
        - Launch
        - Onyx2
      services:
        88f80580-0000-01e6-aace-0002a5d5c51b:
          tx: 88f80581-0000-01e6-aace-0002a5d5c51b
          rx: 88f80582-0000-01e6-aace-0002a5d5c51b
          # The Launch has a special characteristic for loading
          # firmware.
          firmware: 88f80583-0000-01e6-aace-0002a5d5c51b
        f60402a6-0293-4bdb-9f20-6758133f7090:
          tx: 02962ac9-e86f-4094-989d-231d69995fc2
          rx: d44d0393-0731-43b3-a373-8fc70b1f3323
          # The Onyx2 has a special characteristic for loading
          # firmware.
          firmware: c7b7a04b-2cc4-40ff-8b10-5d531d1161db
  erostek-et312:
    serial:
      # Port names are defined in user configs
      baud-rate: 19200
      data-bits: 8
      parity: N
      stop-bits: 1
  vorze-cyclone-x:
    hid:
      vendor-id: 0x0483
      product-id: 0x5750
  rez-trancevibrator:
    usb:
      vendor-id: 0xb49
      product-id: 0x064f
  kiiroo-v1:
    btle:
      names:
        - ONYX
        - PEARL
      services:
        49535343-fe7d-4ae5-8fa9-9fafd205e455:
          rx: 49535343-1e4d-4bd9-ba61-23c647249616
          tx: 49535343-8841-43f4-a8d4-ecbe34729bb3
          command: 49535343-aca3-481c-91ec-d85e28a60318
          cmd2: 49535343-6daa-4d02-abf6-19569aca69fe
  vorze-sa:
    btle:
      names:
        - CYCSA
        - Bach smart
        - UFOSA
      services:
        40ee1111-63ec-4b7f-8ce7-712efd55b90e:
          tx: 40ee2222-63ec-4b7f-8ce7-712efd55b90e
  youou:
    btle:
      names:
        - VX001_*
      services:
        0000fff0-0000-1000-8000-00805f9b34fb:
          tx: 0000fff6-0000-1000-8000-00805f9b34fb
  prettylove:
    btle:
      names:
        - Aogu BLE *
      services:
        0000FFE5-0000-1000-8000-00805f9b34fb:
          tx: 0000FFE9-0000-1000-8000-00805f9b34fb
          rx: 0000FFE2-0000-1000-8000-00805f9b34fb
  # nintendo-joycon:
  #   names:
  #     en-us: Nintendo Joycon
  #   protocol: joycon
  #   connection-info:
  #     - hid:
  #         vendor-id: 0x057e
  #         product-id: 0x2006
